server:
  port: 8091
  context-path: /
  tomcat.max-threads: 80
  tomcat.uri-encoding: UTF-8

spring:
  task:
    pool: # 线程池配置
      core-pool-size: 5
      keep-alive-seconds: 60
      queue-capacity: 10000
      thread-name-prefix: FSH-async
      max-pool-size: 50
  datasource:
    url: jdbc:mysql://localhost:3306/scrapy_test?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false
    username: root
    password: 123455
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    # 初始化大小，最小，最大
    initialSize: 1
    minIdle: 1
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true #是否缓存preparedStatement，也就是PSCache  官方建议MySQL下建议关闭   个人建议如果想用SQL防火墙 建议打开
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    #
    logSlowSql: false
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

  jpa:
    # 不要初始化Scheme
    generate-ddl: false
    show-sql: true
    databasePlatform: org.hibernate.dialect.MySQLDialect
    hibernate:
      # 不做处理
      ddl-auto: none
#    properties:
#      hibernate.hbm2ddl.auto: update
#      hibernate.current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext
#      hibernate.cache.use_query_cache: false
#      hibernate.cache.use_second_level_cache: false
#      hibernate.cache.region.factory_class: org.hibernate.cache.ehcache.EhCacheRegionFactory
      #hibernate.naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
      #hibernate.implicit_naming_strategy: legacy-jpa

  redis:
    host: 127.0.0.1
    port: 6379
    password: 123455
    database: 0
    pool.max-idle: 8
    pool.min-idle: 4
    pool.max-active: 8
    pool.max-wait: 0
    #sentinel.master: # name of redis server
    #sentinel.nodes: # comma-separated list of host:port pairs


#注册中心
eureka:
  instance:
      #注册时使用ip而不是主机名
      preferIpAddress: true
      instance-id: ${spring.cloud.client.ipAddress}:${server.port}
#      instance-id: ${spring.cloud.client.ipAddress}:${spring.application.instance_id:${random.int(4000,10000)}}
#      注册服务慢的问题,修改心跳时间，便可解决此问题
      lease-renewal-interval-in-seconds: 5      # 心跳时间，即服务续约间隔时间（缺省为30s）
      lease-expiration-duration-in-seconds: 15  # 发呆时间，即服务续约到期时间（缺省为90s）
      metadata-map:
        instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}} #eureka instance 标识，需要唯一，如果不配置，多个节点最终只会有一个生效
        cluster: Main
        management.context-path: ${management.context-path} #必须设置Acturtor的路径给Eureka
        user.name: wi #Instance通过metadata-map将自己的用户名和密码传递给spring boot admin
        user.password: wi
  client:
      healthcheck:
            enabled: false
      registryFetchIntervalSeconds: 5   #从eureka服务器注册表中获取注册信息的时间间隔（s），默认为30秒
      heartbeat-executor-thread-pool-size: 5
      serviceUrl:
        defaultZone: http://wi:wi@10.15.2.202:8761/eureka/
#      healthcheck:
#          enabled: true #使用health端点来代替心跳表明服务是否可用，反应到eureka server ui上服务的UP还是DOWN （依赖spring-boot-starter-actuator）

# 安全认证的配置
security:
  basic:
    enabled: false # 开启基于HTTP basic的认证
  user:
    name: wi  # 配置登录的账号
    password: wi #配置登录的密码

# SpringActuator配置
management:
  security:
    enabled: false #spring-boot 1.5.2之后严格执行安全策略，所以需要配置这个为false
  context-path: /monitor #指定actuator的访问路径，最好是放到一个别的目录下面，防止 和/产生冲突

from:
  datasource:
      url: jdbc:mysql://localhost:3306/scrapy_test?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false
      username: root
      password: 123445
      # 使用druid数据源
      type: com.alibaba.druid.pool.DruidDataSource
      driver-class-name: com.mysql.jdbc.Driver
      # 初始化大小，最小，最大
      initialSize: 1
      minIdle: 1
      maxActive: 20
  jpa:
    generate-ddl: false
    show-sql: true
    databasePlatform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: none
    properties:
#      hibernate.hbm2ddl.auto: update
#      hibernate.current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext
#      hibernate.cache.use_query_cache: false
#      hibernate.cache.use_second_level_cache: false
#      hibernate.cache.region.factory_class: org.hibernate.cache.ehcache.EhCacheRegionFactory
      #hibernate.naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
      #hibernate.implicit_naming_strategy: legacy-jpa

# Swagger配置
swagger:
  packages: com.kyle.ok
  path: /
  title: 小五
  description: 描述
  version: 1.0.0

to:
  datasource:
    url: jdbc:mysql://localhost:3306/scrapy_test?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false
    username: root
    password: 123345
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    # 初始化大小，最小，最大
    initialSize: 1
    minIdle: 1
    maxActive: 20
  jpa:
    generate-ddl: false
    show-sql: true
    databasePlatform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: none
    properties:
#      hibernate.hbm2ddl.auto: update
#      hibernate.current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext
#      hibernate.cache.use_query_cache: false
#      hibernate.cache.use_second_level_cache: false
#      hibernate.cache.region.factory_class: org.hibernate.cache.ehcache.EhCacheRegionFactory
      #hibernate.naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
      #hibernate.implicit_naming_strategy: legacy-jpa

logging:
  config: classpath:logback-spring.xml
  level: info
  path: ./logs
