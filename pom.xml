<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>

    <groupId>com.lingdonge</groupId>
    <artifactId>utility-parent</artifactId>
    <name>utility</name>
    <version>3.0.4</version>

    <description>Java日常工具类</description>
    <url>https://github.com/lingdonge/java-utility</url>

    <properties>
        <!-- 基础配置 -->
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <!-- 常用包版本配置 -->
        <mysql.version>8.0.16</mysql.version>
        <lombok.version>1.16.18</lombok.version>
        <httpclient.version>4.5.5</httpclient.version>
        <swagger.version>2.9.2</swagger.version>
        <swagger.ui.version>1.9.5</swagger.ui.version>
        <jackson.version>2.9.9</jackson.version>
        <fastjson.version>1.2.59</fastjson.version>
        <mybatisplus.version>3.1.2</mybatisplus.version>
        <hutool.version>4.5.11</hutool.version>
        <junit.version>4.12</junit.version>
        <druid.version>1.0.31</druid.version>
        <logback.version>1.2.3</logback.version>
        <common.version>3.0.4</common.version>

        <!-- Spring框架配置 -->
        <spring.boot.version>2.1.5.RELEASE</spring.boot.version>
        <spring.cloud.version>Greenwich.SR2</spring.cloud.version>
        <spring.cloud.netflix>2.1.1.RELEASE</spring.cloud.netflix>
        <spring.alibaba.version>2.1.0.RELEASE</spring.alibaba.version>

        <!-- Docker及插件版本配置 -->
        <docker.plugin.version>1.0.0</docker.plugin.version>
        <docker.image.prefix>mljr-marketing</docker.image.prefix>

    </properties>

    <modules>
        <module>cloud-core</module>
        <module>cloud-spring</module>
        <module>cloud-component</module>
    </modules>

    <dependencies>

        <!-- 基础包，必选 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.4</version>
        </dependency>

        <!-- 基础包，必选 -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>23.0</version>
        </dependency>

        <!-- HuTool工具基础包 -->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-core</artifactId>
            <version>${hutool.version}</version>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-extra</artifactId>
            <version>${hutool.version}</version>
        </dependency>

        <!-- logback日志包 -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version>
            <optional>true</optional>
        </dependency>

        <!-- 简化代码注解包，必选 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>


    <build>
        <defaultGoal>compile</defaultGoal>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <!--pluginManagement一般是用来在父POM中定义，子模块中可以不用再定义-->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.7.0</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <!-- 一般而言，target与source是保持一致的，但是，有时候为了让程序能在其他版本的jdk中运行(对于低版本目标jdk，源代码中需要没有使用低版本jdk中不支持的语法)，会存在target不同于source的情况 -->
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <verbose>true</verbose>
                    </configuration>
                </plugin>

                <!-- Docker布署插件 -->
                <!--<plugin>-->
                <!--<groupId>com.spotify</groupId>-->
                <!--<artifactId>docker-maven-plugin</artifactId>-->
                <!--</plugin>-->

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.10.4</version>
                    <configuration>
                        <aggregate>true</aggregate>
                    </configuration>
                </plugin>

            </plugins>
        </pluginManagement>

    </build>

    <!--SpringBoot非Release版本，必须引用-->
    <!--<repositories>-->
    <!--<repository>-->
    <!--<id>spring-snapshots</id>-->
    <!--<url>http://repo.spring.io/snapshot</url>-->
    <!--<snapshots>-->
    <!--<enabled>true</enabled>-->
    <!--</snapshots>-->
    <!--</repository>-->

    <!--<repository>-->
    <!--<id>spring-milestones</id>-->
    <!--<url>http://repo.spring.io/milestone</url>-->
    <!--</repository>-->
    <!--</repositories>-->

    <!--<pluginRepositories>-->
    <!--<pluginRepository>-->
    <!--<id>spring-snapshots</id>-->
    <!--<url>http://repo.spring.io/snapshot</url>-->
    <!--</pluginRepository>-->

    <!--<pluginRepository>-->
    <!--<id>spring-milestones</id>-->
    <!--<url>http://repo.spring.io/milestone</url>-->
    <!--</pluginRepository>-->
    <!--</pluginRepositories>-->

    <profiles>
        <profile>
            <id>disable-javadoc-doclint</id>
            <activation>
                <jdk>[1.8,)</jdk>
            </activation>
            <!-- java8版本导致javadoc打包编译失败时候，添加-->
            <properties>
                <javadoc.opts>-Xdoclint:none</javadoc.opts>
            </properties>
        </profile>

        <profile>
            <id>release</id>

            <distributionManagement>
                <snapshotRepository>
                    <!-- 取settings.xml中的ID -->
                    <id>sonatype</id>
                    <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
                </snapshotRepository>
                <!-- 取settings.xml中的ID -->
                <repository>
                    <id>sonatype</id>
                    <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
                </repository>
            </distributionManagement>

            <build>
                <plugins>

                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.3</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>sonatype</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>

                    <!-- Source -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>3.0.1</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Javadoc -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>2.10.4</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <!-- java8版本导致javadoc打包编译失败时候，添加-->
                                <configuration>
                                    <additionalparam>${javadoc.opts}</additionalparam>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Gpg Signature -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>
    </profiles>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <scm>
        <url>git@github.com:lingdonge/java-utility.git</url>
        <connection>scm:git@github.com:lingdonge/java-utility.git</connection>
        <developerConnection>scm:git@github.com:lingdonge/java-utility.git</developerConnection>
    </scm>

    <developers>
        <developer>
            <name>kyle</name>
            <email>hackerpayne@gmail.com</email>
            <url>www.lingdonge.com</url>
        </developer>
    </developers>

</project>